#!/usr/bin/env bash

# GET ARGS
while getopts ":r:f:hl" o; do case "${o}" in
	h) 
    echo -e "Optional arguments for custom use:"
    echo -e "  -f: File"
    echo -e "  -r: Retreive number"
    echo -e "  -l: Worker program to call"
    echo -e "  -h: Show this message"
    exit 
    ;;
	f) openFile="$openFile ${OPTARG}" ;;
	r) retreiveNum=${OPTARG} ;;
	l) list="true" ;; # Flag, sets var true
	*) echo "-$OPTARG is not a valid option." && exit ;;
esac done

# DEFAULTS:
[ -z ${cachefile+x} ] && cachefile=$HOME/.scripts/.workcache.csv && touch $cachefile
[ -z ${retreiveNum+x} ] && retreiveNum=$(wc -l <$cachefile)
[ -z ${openFile+x} ] && openFile="false"
[ -z ${list+x} ] && list="false"

# FUNCTIONALITY
wrl()
{
    less $cachefile
}

wre()
{
    vim $cachefile
}

wro()
{
    # Lets wro take arg and cache the argument
    [ -z ${1+x} ] && [ -z ${wrn+x} ] && wrl && return || wrn=$1

    # Read the csv
	while IFS=, read -r num workpath files; do
      if [ "$1" = "$num" ];then
        cd $workpath 
        openfiles="$files"
      fi
	done < $cachefile ;

    # Open files in vim
    if [[ -z {$openfiles+x} ]]; then
      echo "Index invalid or didnt have files"
    else 
      eval "vim -O ${openfiles}"
    fi
}

wrw()
{
    # Get dir
    current_wd=$(pwd)
    # Program path
    retreiveNum=$(($(wc -l <$cachefile) -1))
    echo "$retreiveNum,$current_wd,$@" >> $cachefile
    wro $retreiveNum
}

# PROGRAM MAIN
main () 
{
    # Debug one of the params
    echo "cachefile is : $cachefile"
    echo "retreivenum is : $retreiveNum"

    # List files if it is set
    [[ $list = "true" ]] && wrl && exit

    # Write new entry
    if [ "$openFile" = "false" ]; then echo "Proceeding to workdir lookup"; else
        wrw $openFile
        exit
    fi

    # Retreive
    wro $retreiveNum
}

[[ $_ != $0 ]] || main $@
